{
  "/assets/icons/arrow-repeat.svg": {
    "type": "image/svg+xml",
    "route": "/assets/icons/arrow-repeat.svg",
    "content": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxNiIgaGVpZ2h0PSIxNiIgZmlsbD0iY3VycmVudENvbG9yIiBjbGFzcz0iYmkgYmktYXJyb3ctcmVwZWF0IiB2aWV3Qm94PSIwIDAgMTYgMTYiPgogIDxwYXRoIGQ9Ik0xMS41MzQgN2gzLjkzMmEuMjUuMjUgMCAwIDEgLjE5Mi40MWwtMS45NjYgMi4zNmEuMjUuMjUgMCAwIDEtLjM4NCAwbC0xLjk2Ni0yLjM2YS4yNS4yNSAwIDAgMSAuMTkyLS40MXptLTExIDJoMy45MzJhLjI1LjI1IDAgMCAwIC4xOTItLjQxTDIuNjkyIDYuMjNhLjI1LjI1IDAgMCAwLS4zODQgMEwuMzQyIDguNTlBLjI1LjI1IDAgMCAwIC41MzQgOXoiLz4KICA8cGF0aCBmaWxsLXJ1bGU9ImV2ZW5vZGQiIGQ9Ik04IDNjLTEuNTUyIDAtMi45NC43MDctMy44NTcgMS44MThhLjUuNSAwIDEgMS0uNzcxLS42MzZBNi4wMDIgNi4wMDIgMCAwIDEgMTMuOTE3IDdIMTIuOUE1LjAwMiA1LjAwMiAwIDAgMCA4IDN6TTMuMSA5YTUuMDAyIDUuMDAyIDAgMCAwIDguNzU3IDIuMTgyLjUuNSAwIDEgMSAuNzcxLjYzNkE2LjAwMiA2LjAwMiAwIDAgMSAyLjA4MyA5SDMuMXoiLz4KPC9zdmc+"
  },
  "/assets/icons/box-seam-fill.svg": {
    "type": "image/svg+xml",
    "route": "/assets/icons/box-seam-fill.svg",
    "content": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxNiIgaGVpZ2h0PSIxNiIgZmlsbD0iY3VycmVudENvbG9yIiBjbGFzcz0iYmkgYmktYm94LXNlYW0tZmlsbCIgdmlld0JveD0iMCAwIDE2IDE2Ij4KICA8cGF0aCBmaWxsLXJ1bGU9ImV2ZW5vZGQiIGQ9Ik0xNS41MjggMi45NzNhLjc1Ljc1IDAgMCAxIC40NzIuNjk2djguNjYyYS43NS43NSAwIDAgMS0uNDcyLjY5NmwtNy4yNSAyLjlhLjc1Ljc1IDAgMCAxLS41NTcgMGwtNy4yNS0yLjlBLjc1Ljc1IDAgMCAxIDAgMTIuMzMxVjMuNjY5YS43NS43NSAwIDAgMSAuNDcxLS42OTZMNy40NDMuMTg0bC4wMS0uMDAzLjI2OC0uMTA4YS43NS43NSAwIDAgMSAuNTU4IDBsLjI2OS4xMDguMDEuMDAzIDYuOTcgMi43ODlaTTEwLjQwNCAyIDQuMjUgNC40NjEgMS44NDYgMy41IDEgMy44Mzl2LjRsNi41IDIuNnY3LjkyMmwuNS4yLjUtLjJWNi44NGw2LjUtMi42di0uNGwtLjg0Ni0uMzM5TDggNS45NjEgNS41OTYgNWw2LjE1NC0yLjQ2MUwxMC40MDQgMloiLz4KPC9zdmc+"
  },
  "/assets/icons/folder2-open.svg": {
    "type": "image/svg+xml",
    "route": "/assets/icons/folder2-open.svg",
    "content": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxNiIgaGVpZ2h0PSIxNiIgZmlsbD0iY3VycmVudENvbG9yIiBjbGFzcz0iYmkgYmktZm9sZGVyMi1vcGVuIiB2aWV3Qm94PSIwIDAgMTYgMTYiPgogIDxwYXRoIGQ9Ik0xIDMuNUExLjUgMS41IDAgMCAxIDIuNSAyaDIuNzY0Yy45NTggMCAxLjc2LjU2IDIuMzExIDEuMTg0QzcuOTg1IDMuNjQ4IDguNDggNCA5IDRoNC41QTEuNSAxLjUgMCAwIDEgMTUgNS41di42NGMuNTcuMjY1Ljk0Ljg3Ni44NTYgMS41NDZsLS42NCA1LjEyNEEyLjUgMi41IDAgMCAxIDEyLjczMyAxNUgzLjI2NmEyLjUgMi41IDAgMCAxLTIuNDgxLTIuMTlsLS42NC01LjEyNEExLjUgMS41IDAgMCAxIDEgNi4xNFYzLjV6TTIgNmgxMnYtLjVhLjUuNSAwIDAgMC0uNS0uNUg5Yy0uOTY0IDAtMS43MS0uNjI5LTIuMTc0LTEuMTU0QzYuMzc0IDMuMzM0IDUuODIgMyA1LjI2NCAzSDIuNWEuNS41IDAgMCAwLS41LjVWNnptLS4zNjcgMWEuNS41IDAgMCAwLS40OTYuNTYybC42NCA1LjEyNEExLjUgMS41IDAgMCAwIDMuMjY2IDE0aDkuNDY4YTEuNSAxLjUgMCAwIDAgMS40ODktMS4zMTRsLjY0LTUuMTI0QS41LjUgMCAwIDAgMTQuMzY3IDdIMS42MzN6Ii8+Cjwvc3ZnPg=="
  },
  "/assets/icons/gear-fill.svg": {
    "type": "image/svg+xml",
    "route": "/assets/icons/gear-fill.svg",
    "content": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxNiIgaGVpZ2h0PSIxNiIgZmlsbD0iY3VycmVudENvbG9yIiBjbGFzcz0iYmkgYmktZ2Vhci1maWxsIiB2aWV3Qm94PSIwIDAgMTYgMTYiPgogIDxwYXRoIGQ9Ik05LjQwNSAxLjA1Yy0uNDEzLTEuNC0yLjM5Ny0xLjQtMi44MSAwbC0uMS4zNGExLjQ2NCAxLjQ2NCAwIDAgMS0yLjEwNS44NzJsLS4zMS0uMTdjLTEuMjgzLS42OTgtMi42ODYuNzA1LTEuOTg3IDEuOTg3bC4xNjkuMzExYy40NDYuODIuMDIzIDEuODQxLS44NzIgMi4xMDVsLS4zNC4xYy0xLjQuNDEzLTEuNCAyLjM5NyAwIDIuODFsLjM0LjFhMS40NjQgMS40NjQgMCAwIDEgLjg3MiAyLjEwNWwtLjE3LjMxYy0uNjk4IDEuMjgzLjcwNSAyLjY4NiAxLjk4NyAxLjk4N2wuMzExLS4xNjlhMS40NjQgMS40NjQgMCAwIDEgMi4xMDUuODcybC4xLjM0Yy40MTMgMS40IDIuMzk3IDEuNCAyLjgxIDBsLjEtLjM0YTEuNDY0IDEuNDY0IDAgMCAxIDIuMTA1LS44NzJsLjMxLjE3YzEuMjgzLjY5OCAyLjY4Ni0uNzA1IDEuOTg3LTEuOTg3bC0uMTY5LS4zMTFhMS40NjQgMS40NjQgMCAwIDEgLjg3Mi0yLjEwNWwuMzQtLjFjMS40LS40MTMgMS40LTIuMzk3IDAtMi44MWwtLjM0LS4xYTEuNDY0IDEuNDY0IDAgMCAxLS44NzItMi4xMDVsLjE3LS4zMWMuNjk4LTEuMjgzLS43MDUtMi42ODYtMS45ODctMS45ODdsLS4zMTEuMTY5YTEuNDY0IDEuNDY0IDAgMCAxLTIuMTA1LS44NzJsLS4xLS4zNHpNOCAxMC45M2EyLjkyOSAyLjkyOSAwIDEgMSAwLTUuODYgMi45MjkgMi45MjkgMCAwIDEgMCA1Ljg1OHoiLz4KPC9zdmc+"
  },
  "/htm@3.1.1-preact-standalone.module.js": {
    "type": "text/javascript",
    "route": "/htm@3.1.1-preact-standalone.module.js",
    "content": ""
  },
  "/index.html": {
    "type": "text/html",
    "route": "/index.html",
    "content": "PCFkb2N0eXBlIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KICA8aGVhZD4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ic3R5bGUuY3NzIiAvPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIuL3Nob2VsYWNlQDIuMTUuMC1saWdodC5jc3MiIC8+CiAgICA8c2NyaXB0IHR5cGU9Im1vZHVsZSIgc3JjPSIuL3Nob2VsYWNlLXN0eWxlQDIuMTUuMC5qcyI+PC9zY3JpcHQ+CiAgICA8dGl0bGU+U3R1ZGlvIFBhY2sgR2VuZXJhdG9yPC90aXRsZT4KICA8L2hlYWQ+CiAgPGJvZHk+CiAgICA8c2NyaXB0IHR5cGU9Im1vZHVsZSIgc3JjPSIuL21haW4uanMiPjwvc2NyaXB0PgogIDwvYm9keT4KPC9odG1sPgo="
  },
  "/main.js": {
    "type": "text/javascript",
    "route": "/main.js",
    "content": ""
  },
  "/shoelace-style@2.15.0.js": {
    "type": "text/javascript",
    "route": "/shoelace-style@2.15.0.js",
    "content": ""
  },
  "/shoelace@2.15.0-light.css": {
    "type": "text/css",
    "route": "/shoelace@2.15.0-light.css",
    "content": ""
  },
  "/style.css": {
    "type": "text/css",
    "route": "/style.css",
    "content": "Ym9keSB7CiAgcGFkZGluZzogMjBweDsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgbWluLXdpZHRoOiA5MjVweDsKfQoKLmFwcCB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogc3RhcnQ7Cn0KCi5rbyB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmVkOwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBoZWlnaHQ6IDIwMHB4OwogIHdpZHRoOiAxMDAlOwogIGZvbnQtc2l6ZTogNDBweDsKICBjb2xvcjogI2ZmZjsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgei1pbmRleDogMTAwMDsKfQoKLypAbWVkaWEgKHByZWZlcnMtY29sb3Itc2NoZW1lOiBsaWdodCkgeyovCi8qICBib2R5IHsqLwovKiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOyovCi8qICAgIGNvbG9yOiAjMDAwOyovCi8qICB9Ki8KLyp9Ki8KLypAbWVkaWEgKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKSB7Ki8KLyogIGJvZHkgeyovCi8qICAgIGJhY2tncm91bmQtY29sb3I6ICMyMjI7Ki8KLyogICAgY29sb3I6ICNmZmY7Ki8KLyogIH0qLwovKn0qLwoKLnN0b3J5IHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgZGlzcGxheTogZmxleDsKICAvKmJvcmRlcjogIzFjMmFhOSBzb2xpZCAycHg7Ki8KICAvKmJvcmRlci1yYWRpdXM6IDVweDsqLwogIGZsZXg6IDA7Cn0KCi5pdGVtIHsKICBmbGV4OiAwOwogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24tc2VsZjogc3RhcnQ7Cn0KLnN0b3J5LWF1ZGlvIHsKICBib3JkZXI6ICMxYzJhYTkgc29saWQgMTBweDsKICBib3JkZXItcmFkaXVzOiA1MHB4OwogIHBhZGRpbmc6IDEwcHg7Cn0KLlN0YWdlTm9kZS1TdG9yeUl0ZW0gewogIGFsaWduLWl0ZW1zOiBjZW50ZXI7Cn0KLmNhcmQgewogIGJvcmRlcjogI2FhYSBzb2xpZCAzcHg7CiAgYm94LXNoYWRvdzogNnB4IDZweCA4cHggI2JiYjsKICBwYWRkaW5nOiAxMHB4OwogIG1hcmdpbi1ib3R0b206IDE1cHg7CiAgZmxleDogMDsKfQouU3RhZ2VOb2RlLU1lbnUgPiAuY2FyZCB7CiAgYm9yZGVyOiAjZmY4YThhIGRhc2hlZCA4cHg7Cn0KLlN0YWdlTm9kZS1NZW51LnNldmVyYWwgPiAuY2FyZCB7CiAgYm9yZGVyOiAjOGFjMWZmIGRhc2hlZCA4cHg7Cn0KLlN0YWdlTm9kZS1FbnRyeXBvaW50ID4gLmNhcmQgewogIGJvcmRlcjogI2ZmMzIzMiBzb2xpZCA4cHg7Cn0KLmxpbmUgewogIG1pbi13aWR0aDogODBweDsKfQoKc3ZnIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7Cn0KLnN0b3J5LWxpbmUgewogIHdpZHRoOiAzNnB4OwogIGhlaWdodDogMjBweDsKfQouZW1wdHkgewogIG1pbi1oZWlnaHQ6IDgwcHg7CiAgbWluLXdpZHRoOiA4MHB4Owp9Ci5wcmV2aWV3IHsKICAvKmJvcmRlcjogI2FhYSBzb2xpZCAzcHg7Ki8KICAvKmJveC1zaGFkb3c6IDZweCA2cHggOHB4ICNiYmI7Ki8KICAvKnBhZGRpbmc6IDEwcHg7Ki8KICAvKm92ZXJmbG93OiBhdXRvOyovCiAgLypqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsqLwogIC8qZGlzcGxheTogZmxleDsqLwp9CgouZm9sZGVyLXBhdGggewogIGZvbnQtZmFtaWx5OiBtb25vc3BhY2U7CiAgZm9udC1zaXplOiAyMHB4OwogIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7Cn0KLnByZXZpZXctdGl0bGUgewogIG1hcmdpbi1ib3R0b206IDIwcHg7CiAgcGFkZGluZzogMTBweDsKICBmb250LXNpemU6IDI1cHg7CiAgYm9yZGVyLWJvdHRvbTogIzg4OCBzb2xpZCAzcHg7Cn0KLmNvbmZpZyB7CiAgZGlzcGxheTogZ3JpZDsKICByb3ctZ2FwOiA1cHg7CiAgY29sdW1uLWdhcDogMjBweDsKICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7CiAgbWF4LXdpZHRoOiAxMDAwcHg7Cn0KLnpvb20gewogIGRpc3BsYXk6IGZsZXg7Cn0KLnpvb20gPiBzbC1yYW5nZSB7CiAgZmxleDogMTsKICBtYXJnaW4tbGVmdDogMjBweDsKfQo="
  }
}
